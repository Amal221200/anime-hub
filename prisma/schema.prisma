// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum USER_ROLE {
  ADMIN
  USER
}

model User {
  id             String    @id @default(uuid())
  imageUrl       String    @db.Text
  externalUserId String    @unique
  username       String
  email          String    @unique
  role           USER_ROLE @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Review Review[]
}

enum ANIME_STATUS {
  ONGOING
  COMPLETED
}

model Anime {
  id              String       @id @default(uuid())
  title           String
  description     String
  watchLink       String
  status          ANIME_STATUS
  studio          String
  artist          String
  episodes        Int
  episodeDuration Int
  release         Int
  genre           String[]
  imageLink       String
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  Review Review[]
}

model Review {
  id      String @id @default(uuid())
  content String
  userId  String
  animeId String

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  anime Anime @relation(fields: [animeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([animeId])
}
